// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"

	credentials "github.com/chainloop-dev/bedrock/internal/credentials"
	mock "github.com/stretchr/testify/mock"
)

// Reader is an autogenerated mock type for the Reader type
type Reader struct {
	mock.Mock
}

// ReadAPICreds provides a mock function with given fields: ctx, secretName, creds
func (_m *Reader) ReadAPICreds(ctx context.Context, secretName string, creds *credentials.APICreds) error {
	ret := _m.Called(ctx, secretName, creds)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, *credentials.APICreds) error); ok {
		r0 = rf(ctx, secretName, creds)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReadOCICreds provides a mock function with given fields: ctx, secretName, creds
func (_m *Reader) ReadOCICreds(ctx context.Context, secretName string, creds *credentials.OCIKeypair) error {
	ret := _m.Called(ctx, secretName, creds)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, *credentials.OCIKeypair) error); ok {
		r0 = rf(ctx, secretName, creds)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewReader interface {
	mock.TestingT
	Cleanup(func())
}

// NewReader creates a new instance of Reader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewReader(t mockConstructorTestingTNewReader) *Reader {
	mock := &Reader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
